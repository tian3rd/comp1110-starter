package comp1110.ass1;

import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.Timeout;

import static org.junit.Assert.assertTrue;

public class FindSolutionTest {
    @Rule
    public Timeout globalTimeout = Timeout.millis(5000);

    @Test
    public void testTrivial() {
        test(new Objective("Rv", "N0O1N1N0O1O2N0N2N2Rs", 0), "6");
        test(new Objective("Rv", "N0O1N1N0O1O2N0N1N2Rw", 0), "76");
    }

    @Test
    public void testStarter() {
        for (int i = 0; i < 15; i++) {
            Objective obj = Objective.OBJECTIVES[i];
            test(obj, SOLUTIONS[i]);
        }
    }

    private void test(Objective objective, String expected) {
        String solution = Vikings.findSolution(objective);
        assertTrue("Expected solution " + expected + " for  " + objective + " but got " + solution, expected.equals(solution));
    }

    static final String[] SOLUTIONS = {
            // STARTER
            "8547776",
            "744111222558",
            "0336743330001122",
            "88855214555888777441033666",
            "0336743330001114522",
            "1100222112111",
            "01103301121100023330001102330110002333",
            "44111001455",
            "1452228555",
            "0004411222558855521100000041112224555885211000",
            "454441145588854100088",
            "8887774410333011001",
            "4333474410001444555843334117441000145558",
            "122215554788874410011033301",
            "10144411445543377",
            // JUNIOR
            "21100221103014122255588855211001112110022110301410022255588855211001",
            "011001121122215554441036366636300014455000110021122215554441036366636300014455",
            "",
            "01144104443467433300044410011488852225558",
            "444558854888776667677766677433300085444112111000",
            "25588778555777444521000547743445545768558872558877855577744452100054443445557776778887",
            "855544588855547774666333474554100014585",
            "8774474852445554100111441108887888",
            "01100222155544410333630001411457855544411580110011222155544410333630001411457854441158011001122215554441033363000141145557854441100011002221555444103336300014114578544411580001100222155544410333630001411455578544411",
            "5688778574333077411144557744110333",
            "011225521555444103633300011144474411152225522288",
            "4785225585888777444521001112224522578552252",
            "30011013455455477411344578887767773001100300141014554344114578887767",
            "4330030004111222455544488877745241044433666",
            "011002211255522521554441033663663336330001114478544411122255801100221125552252155444103366300663336630111344474411152225580110022112555222144410363636633363300011144744411122255855222",
            // EXPERT
            "038555445888555444777433443000330330006663411",
            "85411455445888555444117774410144433666334100",
            "10633006330110022211022336663",
            "477766633300366636330007441122125225547855222",
            "",
            "5888777441110014114774787441154441022333",
            "2544525410436333047455411145855228",
            "743000355477743666341114443335222566",
            "235634452541433474555855541123563445254143344554745854112356333445254143355474585411",
            "03323003367445554433304447778555887",
            "2554455255411001110435632223347433555825544552554100043445632223300474335558"
    };
}
